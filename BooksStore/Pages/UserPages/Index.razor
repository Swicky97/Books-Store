@page "/"

@using Microsoft.AspNetCore.Components.WebAssembly.Hosting

@inject IConfiguration Configuration
@inject IWebAssemblyHostEnvironment Host
@inject IBooksService BooksService
@inject NavigationManager Navigation

@implements IDisposable

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<BookCard Book="_firstBook" />
<BookCard Book="_firstBook" WithButton="false" class="mt-3" />

<h3>Available Books:</h3>
<DataListView TItemType="Book" Items="_books" ColumnsCount="4">
    <ItemTemplate>
        <BookCard Book="@context"
            OnAddToCartClicked="AddToCart" />
    </ItemTemplate>
</DataListView>

<h3 class="mt-3">My Cart</h3>
<ul>
    @foreach (var item in _booksCart)
    {
        <li>@item.Title</li>
    }
</ul>

<ModalPopup Title="Hi!" IsOpen="@_isWelcomeModalOpen" OnCloseClicked="() => _isWelcomeModalOpen = false">
    <ChildContent>
        <p>Welcome to our Books Store, here you will find a huge collection of books to help you build you career in software development, enjoy it!</p>
    </ChildContent>
    <FooterContent>
        <button class="btn btn-primary" @onclick="() => _isWelcomeModalOpen = false">Discover It</button>
    </FooterContent>
</ModalPopup>

<p>Api Url: @Configuration["ApiUrl"]</p>

@if (!Host.IsDevelopment())
{
    <SurveyPrompt Title="How is Blazor working for you?" />
}

@code
{
    private bool _isWelcomeModalOpen = true;
    private List<Book> _books = new List<Book>();
    private List<Book> _booksCart = new List<Book>();

    private Book _firstBook = new Book
    {
        AuthorName = "John Smith",
        PublishingDate = new DateTime(2022, 08, 01),
        Title = "Mastering Blazor WebAssembly"
    };

    protected override async Task OnInitializedAsync()
    {
        Navigation.LocationChanged += Navigation_LocationChanged;
        _books = await BooksService.GetAllBooksAsync();
    }

    private void AddToCart(Book selectedBook)
    {
        _booksCart.Add(selectedBook);
    }

    private void Navigation_LocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        Console.WriteLine($"The location changed to {e.Location}");
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= Navigation_LocationChanged;
    }
}